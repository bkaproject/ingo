package com.cavalerie.vlc123.gogogo.Dashboard_fragment;

import android.app.Dialog;
import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Toast;

import com.cavalerie.vlc123.gogogo.Activity.DashboardActivity;
import com.cavalerie.vlc123.gogogo.R;
import com.cavalerie.vlc123.gogogo.map;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GoogleApiAvailability;
import com.weiwangcn.betterspinner.library.material.MaterialBetterSpinner;

public class VoyageFragment extends Fragment implements View.OnClickListener, AdapterView.OnItemSelectedListener{

    MaterialBetterSpinner spfonction;
    EditText txtstart, txtend, txthourD, txtdate, txthourA, nbreplace;
    LinearLayout layoutplace;
    Button btnconfirm;

    private static final String TAG = "VoyageFragment";

    private static final int ERROR_DIALOG_REQUEST = 9001;

    public VoyageFragment() {
        // Required empty public constructor
    }

    @Override
    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        View v = inflater.inflate(R.layout.fragment_voyage, container, false);

        //find ID
        txtdate = (EditText) v.findViewById(R.id.txtdate);
        spfonction = (MaterialBetterSpinner) v.findViewById(R.id.spfonction);
        txtstart = (EditText) v.findViewById(R.id.txtstart);
        txtend = (EditText) v.findViewById(R.id.txtend);
        txthourD = (EditText) v.findViewById(R.id.txthourA);
        txthourA = (EditText) v.findViewById(R.id.txthourA);
        nbreplace = (EditText) v.findViewById(R.id.nbreplace);
        layoutplace = (LinearLayout) v.findViewById(R.id.layoutplace);
        btnconfirm = (Button) v.findViewById(R.id.btnconfirm);

        //array adapter used to bind values in the spinner
        ArrayAdapter adapter = ArrayAdapter.createFromResource(this.getActivity(), R.array.fonction, android.R.layout.simple_spinner_dropdown_item);
        spfonction.setAdapter(adapter);

        //on click
        spfonction.setOnItemSelectedListener(this);
        btnconfirm.setOnClickListener(this);
        txtstart.setOnClickListener(this);


        if(isServicesOK()) {
            txtstart.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    Intent intent = new  Intent (getActivity(), map.class);
                    startActivity(intent);
                }
            });

            txtend.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    Intent intent = new  Intent (getActivity(), map.class);
                    startActivity(intent);
                }
            });
        }


        return v;
    }


    public boolean isServicesOK() {
        Log.d(TAG, "isServicesOK: checking google services version");
        int available = GoogleApiAvailability.getInstance().isGooglePlayServicesAvailable(getActivity());

        if(available == ConnectionResult.SUCCESS) {
            //tout ce passe bien  et l'utilisateur peut executer des requetes map
            Log.d(TAG, "isServicesOK: Google Play Services is working");
            return true;
        }
        else if(GoogleApiAvailability.getInstance().isUserResolvableError(available)){
            //une erreur est arrivé mais peut etre resolue
            Log.d(TAG, "isServicesOK: an error occured but you can fix it");
            Dialog dialog = GoogleApiAvailability.getInstance().getErrorDialog(getActivity(), available, ERROR_DIALOG_REQUEST);
            dialog.show();
        } else {
            Toast.makeText(getActivity(), "You can make map requests", Toast.LENGTH_SHORT).show();
        }
        return false;
    }


    @Override
    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
        switch (position) {
            case 0:
                layoutplace.setVisibility(View.VISIBLE);
                break;
            case 1:
                layoutplace.setVisibility(View.INVISIBLE);
                break;
        }
    }

    @Override
    public void onNothingSelected(AdapterView<?> parent) {

    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.btnconfirm:
                if (!validate()) {
                    Toast.makeText(getContext(), "Verifier les informations entrées!", Toast.LENGTH_LONG).show();
                    return;
                }
                break;
        }
    }

    private boolean validate() {
        boolean valid = true;

        String date = txtdate.getText().toString();
        String start = txtstart.getText().toString();
        String end = txtend.getText().toString();
        String hour = txtdate.getText().toString();
        String fonction = spfonction.getText().toString();


        return valid;
    }
}
